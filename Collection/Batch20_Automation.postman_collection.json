{
	"info": {
		"_postman_id": "f018f437-8599-4654-9f3d-cdfc72cf7aab",
		"name": "Batch20_Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39407131",
		"_collection_link": "https://tester-9909.postman.co/workspace/Tushar_API~8340297e-9f67-448b-9beb-ae604dc256bb/collection/39407131-f018f437-8599-4654-9f3d-cdfc72cf7aab?action=share&source=collection_link&creator=39407131"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\", jsonData.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName =pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"First name value:\" +firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName =pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Last name value:\" +lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalprice =pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(\"total price:\" +totalprice)\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"var boolean =pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"boolean\",boolean)\r",
							"\r",
							"var need =pm.variables.replaceIn(\"{{$randomNoun}}\")\r",
							"pm.environment.set(\"need\",need)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today =moment()\r",
							"console.log(today.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkin\",today.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today.add(5,'d').add(5,'M').format(\"YYYY-MM-DD\"))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : \"{{boolean}}\",\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{need}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var Status_code =pm.response.code\r",
							"console.log(Status_code)\r",
							"if(Status_code ==200){\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"TotalPrice Validation\",function(){\r",
							"        pm.expect(jsonData.totalprice).to.eql(Number(pm.environment.get(\"totalprice\")))\r",
							"})\r",
							"\r",
							"pm.test(\"Deposit_Paid Validation\",function(){\r",
							"    pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"boolean\")=== \"true\")\r",
							"})\r",
							"\r",
							"pm.test(\"Checkin Validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Checkout Validation\",function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Additionalneeds Validation\",function(){\r",
							"    pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"need\"))\r",
							"})\r",
							"\r",
							"} else if (Status_code == 404) {\r",
							"pm.test(\"NOT FOUND\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"}\r",
							"else{\r",
							"    pm.test(\"Something is wrong.....\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName =pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"First name value:\" +firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName =pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Last name value:\" +lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalprice =pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today =moment()\r",
							"console.log(today.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkin\",today.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today.add(5,'d').add(5,'M').format(\"YYYY-MM-DD\"))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : {{checkin}},\r\n    \t\"checkout\" : {{checkout}}\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking info Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var StatusCode = pm.response.code\r",
							"console.log(StatusCode)\r",
							"\r",
							"switch(StatusCode){\r",
							"    case 200:\r",
							"        var jsonData = pm.response.json()\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"        pm.test(\"First Name Validation\",function(){\r",
							"        pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"\r",
							"        pm.test(\"Last Name Validation\",function(){\r",
							"        pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"\r",
							"        pm.test(\"TotalPrice Validation\",function(){\r",
							"        pm.expect(jsonData.totalprice).to.eql(Number(pm.environment.get(\"totalprice\")))\r",
							"})\r",
							"\r",
							"        pm.test(\"Deposit_Paid Validation\",function(){\r",
							"        pm.expect(jsonData.depositpaid).to.eql(pm.environment.get(\"boolean\")===\"true\")\r",
							"})\r",
							"\r",
							"        pm.test(\"Checkin Validation\",function(){\r",
							"        pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"\r",
							"        pm.test(\"Checkout Validation\",function(){\r",
							"        pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"        pm.test(\"Additionalneeds Validation\",function(){\r",
							"        pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"need\"))\r",
							"})\r",
							"    break\r",
							"    case 404:\r",
							"        pm.test(\"NOT FOUND\", function(){\r",
							"                pm.response.to.have.status(404);\r",
							"        })\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"token\",jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}